name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev

jobs:
  integration-test:
    runs-on: ubuntu-latest
    env:
      NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
      MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
      MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
      SPACES_KEY_V2: ${{ secrets.SPACES_KEY_V2 }}
      SPACES_SECRET_V2: ${{ secrets.SPACES_SECRET_V2 }}
      LOGFIRE_TOKEN: ${{ secrets.LOGFIRE_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build containers
        working-directory: ./apps/api
        run: docker compose -f docker-compose.test.yml build

      - name: Run tests
        working-directory: ./apps/api
        env:
          DB_HOST: postgres
          REDIS_HOST: serverless-redis-http
          CH_HOST: clickhouse
          NGROK_HOST: ngrok
        run: docker compose -f docker-compose.test.yml up --exit-code-from app --remove-orphans

      - name: Logs on failure
        if: failure()
        working-directory: apps/api
        run: docker compose -f docker-compose.test.yml logs

      - name: Cleanup
        if: always()
        working-directory: apps/api
        run: docker compose -f docker-compose.test.yml down -v

  migrate:
    needs: integration-test
    runs-on: ubuntu-latest
    # drop the "contains" portion, since we already filter at top-level
    if: github.ref_name == 'main' || github.ref_name == 'dev'
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    env:
      DATABASE_URL: ${{ github.ref == 'refs/heads/main' && secrets.PROD_DATABASE_URL || secrets.DEV_DATABASE_URL }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        working-directory: ./apps/api
        run: bun install

      - name: Run database migrations
        working-directory: ./apps/api
        run: bun run migrate-production
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}